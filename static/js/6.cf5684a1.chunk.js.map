{"version":3,"sources":["../node_modules/grommet/es6/components/Form/FormContext.js","../node_modules/grommet/es6/components/CheckBox/StyledCheckBox.js","../node_modules/grommet/es6/components/CheckBox/CheckBox.js","../node_modules/grommet-icons/es6/icons/Previous.js","components/BackButton.tsx","components/screens/Settings.tsx"],"names":["FormContext","React","createContext","useFormContext","_","valueProp","initialValue","_useState","useState","undefined","value","setValue","nextValue","hoverStyle","css","props","normalizeColor","theme","checkBox","hover","border","color","StyledCheckBoxIcon","styled","svg","withConfig","displayName","componentId","check","thickness","icon","size","extend","defaultProps","Object","setPrototypeOf","StyledCheckBoxContainer","label","disabled","StyledCheckBoxInput","input","toggle","StyledCheckBoxBox","div","focus","focusStyle","StyledCheckBoxToggle","span","width","radius","background","StyledCheckBoxKnob","dark","knob","StyledCheckBox","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","stopLabelClick","event","type","stopPropagation","CheckBox","forwardRef","_ref","ref","_ref2","checkedProp","checked","focusProp","id","name","_onBlur","onBlur","_onChange","onChange","_onFocus","onFocus","reverse","indeterminate","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","useContext","ThemeContext","_formContext$useFormC","setChecked","setFocus","useEffect","console","warn","hidden","themeableProps","createElement","_theme$checkBox$icons","icons","CheckedIcon","IndeterminateIcon","borderColor","visual","as","Box","align","justify","height","round","viewBox","preserveAspectRatio","fill","d","side","checkBoxNode","margin","gap","removeUndefined","normalizedLabel","first","second","htmlFor","onClick","CheckBoxWrapper","Previous","StyledIcon","a11yTitle","stroke","strokeWidth","points","transform","connector","connect","dispatch","goBack","Button","Settings","displayOnScreenControls","toggleOnScreenControls","Screen","title","state","settingsSelectors","settings","settingsActions"],"mappings":"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","file":"static/js/6.cf5684a1.chunk.js","sourcesContent":["import React, { useState } from 'react'; // When not a descendant of a Form, FormContext still provides a basic\n// useFormContext. It doesn't do anything for components like TextInput.\n// But, it does store the value for components like CheckBox or Select\n// where the grommet component needs to know the value in order to\n// render custom visuals.\n\nvar useFormContext = function useFormContext(_, valueProp, initialValue) {\n  var _useState = useState(valueProp !== undefined ? valueProp : initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  return [valueProp !== undefined ? valueProp : value, function (nextValue) {\n    if (initialValue !== undefined) setValue(nextValue);\n  }];\n};\n\nexport var FormContext = React.createContext({\n  useFormContext: useFormContext\n});","import styled, { css } from 'styled-components';\nimport { focusStyle, normalizeColor } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar disabledStyle = \"\\n  opacity: 0.5;\\n  cursor: default;\\n\";\nvar hoverStyle = css([\":hover input:not([disabled]) + div,:hover input:not([disabled]) + span{border-color:\", \";}\"], function (props) {\n  return normalizeColor(props.theme.checkBox.hover.border.color, props.theme);\n});\nvar StyledCheckBoxIcon = styled.svg.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxIcon\",\n  componentId: \"sc-1dbk5ju-0\"\n})([\"box-sizing:border-box;stroke-width:\", \";stroke:\", \";width:\", \";height:\", \";\", \";\"], function (props) {\n  return props.theme.checkBox.check.thickness;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.color || 'control', props.theme);\n}, function (props) {\n  return props.theme.checkBox.icon.size || props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.icon.size || props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.icon.extend;\n});\nStyledCheckBoxIcon.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxIcon.defaultProps, defaultProps);\nvar StyledCheckBoxContainer = styled.label.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxContainer\",\n  componentId: \"sc-1dbk5ju-1\"\n})([\"display:flex;flex-direction:row;align-items:center;user-select:none;width:fit-content;\", \" \", \" \", \" \", \"\"], function (props) {\n  return props.disabled && disabledStyle;\n}, function (props) {\n  return !props.disabled && 'cursor: pointer;';\n}, function (props) {\n  return props.theme.checkBox.hover.border.color && hoverStyle;\n}, function (props) {\n  return props.theme.checkBox.extend;\n});\nStyledCheckBoxContainer.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxContainer.defaultProps, defaultProps);\nvar StyledCheckBoxInput = styled.input.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxInput\",\n  componentId: \"sc-1dbk5ju-2\"\n})([\"opacity:0;-moz-appearance:none;width:0;height:0;margin:0;\", \":checked + span > span{left:calc( \", \" - \", \" );background:\", \";}\"], function (props) {\n  return !props.disabled && 'cursor: pointer;';\n}, function (props) {\n  return props.theme.checkBox.toggle.size;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.color || 'control', props.theme);\n});\nStyledCheckBoxInput.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxInput.defaultProps, defaultProps);\nvar StyledCheckBoxBox = styled.div.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxBox\",\n  componentId: \"sc-1dbk5ju-3\"\n})([\"\", \";\", \";\"], function (props) {\n  return props.focus && focusStyle;\n}, function (props) {\n  return props.theme.checkBox.check.extend;\n});\nStyledCheckBoxBox.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxBox.defaultProps, defaultProps);\nvar StyledCheckBoxToggle = styled.span.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxToggle\",\n  componentId: \"sc-1dbk5ju-4\"\n})([\"box-sizing:border-box;vertical-align:middle;display:inline-block;width:\", \";height:\", \";border:\", \" solid;border-color:\", \";border-radius:\", \";background-color:\", \";\", \";\", \";\"], function (props) {\n  return props.theme.checkBox.toggle.size;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.border.width;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.border.color, props.theme);\n}, function (props) {\n  return props.theme.checkBox.toggle.radius;\n}, function (props) {\n  return props.theme.checkBox.toggle.background ? normalizeColor(props.theme.checkBox.toggle.background, props.theme) : 'transparent';\n}, function (props) {\n  return props.focus && focusStyle;\n}, function (props) {\n  return props.theme.checkBox.toggle.extend;\n});\nStyledCheckBoxToggle.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxToggle.defaultProps, defaultProps);\nvar StyledCheckBoxKnob = styled.span.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxKnob\",\n  componentId: \"sc-1dbk5ju-5\"\n})([\"box-sizing:border-box;position:relative;display:inherit;top:-\", \";left:-\", \";transition:all 0.3s;width:\", \";height:\", \";background:\", \";border-radius:\", \";\", \";\"], function (props) {\n  return props.theme.checkBox.border.width;\n}, function (props) {\n  return props.theme.checkBox.border.width;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.toggle.color[props.theme.dark ? 'dark' : 'light'], props.theme);\n}, function (props) {\n  return props.theme.checkBox.toggle.radius;\n}, function (props) {\n  return props.theme.checkBox.toggle.knob.extend;\n});\nStyledCheckBoxKnob.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxKnob.defaultProps, defaultProps);\nvar StyledCheckBox = styled.div.withConfig({\n  displayName: \"StyledCheckBox\",\n  componentId: \"sc-1dbk5ju-6\"\n})([\"flex-shrink:0;\"]);\nStyledCheckBox.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBox.defaultProps, defaultProps);\nexport { StyledCheckBoxIcon, StyledCheckBoxContainer, StyledCheckBoxInput, StyledCheckBoxBox, StyledCheckBoxToggle, StyledCheckBoxKnob, StyledCheckBox };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext, useEffect, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { removeUndefined } from '../../utils/object';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBox, StyledCheckBoxBox, StyledCheckBoxIcon, StyledCheckBoxContainer, StyledCheckBoxInput, StyledCheckBoxToggle, StyledCheckBoxKnob } from './StyledCheckBox';\nimport { normalizeColor } from '../../utils';\n\nvar stopLabelClick = function stopLabelClick(event) {\n  // prevents clicking on the label trigging the event twice\n  // https://stackoverflow.com/questions/24501497/why-the-onclick-element-will-trigger-twice-for-label-element\n  if (event.target.type !== 'checkbox') {\n    event.stopPropagation();\n  }\n};\n\nvar CheckBox = forwardRef(function (_ref, ref) {\n  var _ref2;\n\n  var checkedProp = _ref.checked,\n      disabled = _ref.disabled,\n      focusProp = _ref.focus,\n      id = _ref.id,\n      label = _ref.label,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      _onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      reverse = _ref.reverse,\n      toggle = _ref.toggle,\n      indeterminate = _ref.indeterminate,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"checked\", \"disabled\", \"focus\", \"id\", \"label\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"reverse\", \"toggle\", \"indeterminate\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var formContext = useContext(FormContext);\n\n  var _formContext$useFormC = formContext.useFormContext(name, checkedProp, false),\n      checked = _formContext$useFormC[0],\n      setChecked = _formContext$useFormC[1];\n\n  var _useState = useState(focusProp),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  useEffect(function () {\n    return setFocus(focusProp);\n  }, [focusProp]);\n  useEffect(function () {\n    if (checkedProp && indeterminate) {\n      console.warn('Checkbox cannot be \"checked\" and \"indeterminate\" at the same time.');\n    }\n\n    if (toggle && indeterminate) {\n      console.warn('Checkbox of type toggle does not have \"indeterminate\" state.');\n    }\n  }, [checkedProp, toggle, indeterminate]);\n  var themeableProps = {\n    checked: checked,\n    disabled: disabled,\n    focus: focus,\n    reverse: reverse,\n    toggle: toggle,\n    indeterminate: indeterminate\n  };\n  var hidden;\n\n  if (disabled && checked) {\n    hidden = React.createElement(\"input\", {\n      name: name,\n      type: \"hidden\",\n      value: \"true\"\n    });\n  }\n\n  var _theme$checkBox$icons = theme.checkBox.icons,\n      CheckedIcon = _theme$checkBox$icons.checked,\n      IndeterminateIcon = _theme$checkBox$icons.indeterminate;\n  var borderColor = normalizeColor(theme.checkBox.border.color, theme);\n\n  if (checked) {\n    borderColor = normalizeColor(theme.checkBox.color || 'control', theme);\n  }\n\n  var visual = toggle ? React.createElement(StyledCheckBoxToggle, themeableProps, React.createElement(StyledCheckBoxKnob, themeableProps)) : React.createElement(StyledCheckBoxBox, _extends({\n    as: Box,\n    align: \"center\",\n    justify: \"center\",\n    width: theme.checkBox.size,\n    height: theme.checkBox.size,\n    border: {\n      size: theme.checkBox.border.width,\n      color: borderColor\n    },\n    round: theme.checkBox.check.radius\n  }, themeableProps), !indeterminate && checked && (CheckedIcon ? React.createElement(CheckedIcon, {\n    theme: theme,\n    as: StyledCheckBoxIcon\n  }) : React.createElement(StyledCheckBoxIcon, _extends({\n    theme: theme,\n    viewBox: \"0 0 24 24\",\n    preserveAspectRatio: \"xMidYMid meet\"\n  }, themeableProps), React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M6,11.3 L10.3,16 L18,6.2\"\n  }))), !checked && indeterminate && (IndeterminateIcon ? React.createElement(IndeterminateIcon, {\n    theme: theme,\n    as: StyledCheckBoxIcon\n  }) : React.createElement(StyledCheckBoxIcon, _extends({\n    theme: theme,\n    viewBox: \"0 0 24 24\",\n    preserveAspectRatio: \"xMidYMid meet\"\n  }, themeableProps), React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M6,12 L18,12\"\n  }))));\n  var side = reverse ? 'left' : 'right';\n  var checkBoxNode = React.createElement(StyledCheckBox, _extends({\n    as: Box,\n    align: \"center\",\n    justify: \"center\",\n    margin: label && (_ref2 = {}, _ref2[side] = theme.checkBox.gap || 'small', _ref2)\n  }, themeableProps), React.createElement(StyledCheckBoxInput, _extends({}, rest, {\n    ref: ref,\n    type: \"checkbox\"\n  }, removeUndefined({\n    id: id,\n    name: name,\n    checked: checked,\n    disabled: disabled\n  }), themeableProps, {\n    onFocus: function onFocus(event) {\n      setFocus(true);\n      if (_onFocus) _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false);\n      if (_onBlur) _onBlur(event);\n    },\n    onChange: function onChange(event) {\n      setChecked(event.target.checked);\n      if (_onChange) _onChange(event);\n    }\n  })), visual, hidden);\n  var normalizedLabel = typeof label === 'string' ? React.createElement(\"span\", null, label) : label;\n  var first = reverse ? normalizedLabel : checkBoxNode;\n  var second = reverse ? checkBoxNode : normalizedLabel;\n  return React.createElement(StyledCheckBoxContainer, _extends({\n    reverse: reverse\n  }, removeUndefined({\n    htmlFor: id,\n    disabled: disabled\n  }), {\n    checked: checked,\n    onClick: stopLabelClick\n  }, themeableProps), first, second);\n});\nCheckBox.displayName = 'CheckBox';\nvar CheckBoxDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  CheckBoxDoc = require('./doc').doc(CheckBox);\n}\n\nvar CheckBoxWrapper = CheckBoxDoc || CheckBox;\nexport { CheckBoxWrapper as CheckBox };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { StyledIcon } from '../StyledIcon';\nexport var Previous = function Previous(props) {\n  return React.createElement(StyledIcon, _extends({\n    viewBox: \"0 0 24 24\",\n    a11yTitle: \"Previous\"\n  }, props), React.createElement(\"polyline\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: \"2\",\n    points: \"7 2 17 12 7 22\",\n    transform: \"matrix(-1 0 0 1 24 0)\"\n  }));\n};","import { goBack } from 'connected-react-router';\nimport { Button } from 'grommet';\nimport { Previous } from 'grommet-icons';\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Dispatch } from 'redux';\n\n\ninterface BackButtonProps extends ConnectedProps<typeof connector> {\n}\n\nfunction BackButton({ goBack }: BackButtonProps) {\n  return <Button icon={<Previous/>} label=\"Back\" onClick={() => goBack()}/>;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    goBack: () => dispatch(goBack())\n  };\n}\n\nconst connector = connect(null, mapDispatchToProps);\n\n\nexport default connector(BackButton);\nexport { BackButton };\n","import { CheckBox } from 'grommet';\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { RootState, settingsActions, settingsSelectors } from '../../state';\nimport BackButton from '../BackButton';\nimport Screen from '../Screen';\n\n\ninterface SettingsProps extends ConnectedProps<typeof connector> {\n}\n\nfunction Settings({ displayOnScreenControls, toggleOnScreenControls }: SettingsProps) {\n  return (\n    <Screen title=\"Settings\">\n      <CheckBox label=\"Display on-screen controls (required on devices without a keyboard)\"\n                checked={displayOnScreenControls}\n                onChange={toggleOnScreenControls}\n      />\n      <BackButton/>\n    </Screen>\n  );\n}\n\nfunction mapStateToProps(state: RootState) {\n  return {\n    displayOnScreenControls: settingsSelectors.displayOnScreenControls(state.settings)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    toggleOnScreenControls: () => dispatch(settingsActions.toggleOnScreenControls())\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\n\nexport default connector(Settings);\nexport { Settings };\n"],"sourceRoot":""}